<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.cornerstonews</groupId>
    <artifactId>cornerstone-project</artifactId>
    <packaging>pom</packaging>
    <name>cornerstone-project</name>
    <version>1.4.0-SNAPSHOT</version>
    <description>Library to build Webservice project based on Jersey REST Framework</description>

    <scm>
        <connection>scm:git:git@github.com:cornerstonews/cornerstone-project.git</connection>
        <developerConnection>scm:git:git@github.com:cornerstonews/cornerstone-project.git</developerConnection>
        <url>https://github.com/cornerstonews/cornerstone-project</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>${releasesRepo}</id>
            <name>Maven2 release repository</name>
            <url>${releasesRepo.url}</url>
        </repository>
        <snapshotRepository>
            <id>${snapshotsRepo}</id>
            <name>Maven2 snapshot repository</name>
            <url>${snapshotsRepo.url}</url>
        </snapshotRepository>
    </distributionManagement>

    <modules>
        <module>../cornerstone-config</module>
        <module>../cornerstone-validation</module>
        <module>../cornerstone-persistence</module>
        <module>../cornerstone-ssl</module>
        <module>../cornerstone-websocket-proxy</module>
        <module>../cornerstone-websocket-server</module>
        <module>../cornerstone-grizzly-server</module>
        <module>../cornerstone-adb-driver</module>
        <module>../cornerstone-adb-websocket</module>
        <module>../cornerstone-adb-websocket-server</module>
        <module>../cornerstone-webservice</module>
        <module>../cornerstone-webservice-persistence</module>
    </modules>
    <!--
-->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jdk.version>11</jdk.version>

        <!-- Following dependencies are tied to version of Tomcat 9.0.x -->
        <jakarta.servlet-api.version>4.0.4</jakarta.servlet-api.version>
        <jakarta.el-api.version>3.0.3</jakarta.el-api.version>
        <jakarta.el>3.0.4</jakarta.el>
        <jakarta.websocket-api.version>1.1.2</jakarta.websocket-api.version>

        <!-- Following dependencies are tied to Jersey 2.x project, try keep the major minor version matched to Jersey project -->
        <jersey.version>2.36</jersey.version>
        <jakarta.xml.bind-api.version>2.3.3</jakarta.xml.bind-api.version>
        <moxy.version>2.7.11</moxy.version>
        <jsonp.ri.version>1.1.6</jsonp.ri.version>
        <jackson-databind.version>2.13.3</jackson-databind.version>
        <jackson-dataformat-yaml.version>2.13.3</jackson-dataformat-yaml.version>
        <hibernate-validator.version>6.2.4.Final</hibernate-validator.version>
        <jakarta.validation-api.version>2.0.2</jakarta.validation-api.version>

        <eclipselink.version>2.7.11</eclipselink.version>
        <commons-codec.version>1.15</commons-codec.version>
        <jjwt.version>0.11.5</jjwt.version>
        <jbcrypt.version>0.4</jbcrypt.version>
        <log4j.version>[2.18.0,)</log4j.version>
        <io.dropwizard.metrics.version>4.2.11</io.dropwizard.metrics.version>
        <junit.jupiter.version>5.9.0</junit.jupiter.version>

        <!-- plugins -->
        <maven.enforcer.plugin>3.1.0</maven.enforcer.plugin>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <maven.jar.plugin.version>3.2.2</maven.jar.plugin.version>
        <maven.war.plugin.version>3.3.2</maven.war.plugin.version>
        <maven.release.plugin.version>3.0.0-M6</maven.release.plugin.version>
        <maven.dependency.plugin.version>3.3.0</maven.dependency.plugin.version>
        <maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
        <maven.antrun.plugin.version>3.1.0</maven.antrun.plugin.version>
        <maven.assembly.plugin>3.4.2</maven.assembly.plugin>
        <maven.javadoc.plugin>3.4.1</maven.javadoc.plugin>
        <maven.checkstyle.plugin>3.1.2</maven.checkstyle.plugin>
        <maven.surefire.plugin>3.0.0-M7</maven.surefire.plugin>
        <surefire.security.argline />
        <surefire.coverage.argline />
        <maven.site.plugin>4.0.0-M3</maven.site.plugin>
        <buildnumber.maven.plugin>3.0.0</buildnumber.maven.plugin>
        <checkstyle.version>10.3.2</checkstyle.version>
        <spotbugs.maven.plugin>4.7.1.1</spotbugs.maven.plugin>
        <spotbugs.version>4.7.1</spotbugs.version>
        <spotbugs.skip>false</spotbugs.skip>

    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin}</version>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>${jdk.version}</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <fork>false</fork>
                        <compilerArguments>
                            <!-- Do not warn about using sun.misc.Unsafe <XDignore.symbol.file /> -->
                        </compilerArguments>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <excludes>
                            <exclude>**/log4j.properties</exclude>
                            <exclude>**/log4j2.xml</exclude>
                            <exclude>**/log4j2.properties</exclude>
                            <exclude>**/application.yaml</exclude>
                            <exclude>**/persistence.xml</exclude>
                        </excludes>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Id>${project.version}-${buildNumber}</Build-Id>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                    <configuration>
                        <!-- <warName>api</warName> -->
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Id>${project.version}-${buildNumber}</Build-Id>
                            </manifestEntries>
                        </archive>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <packagingExcludes>
                            **/log4j.properties,
                            **/log4j2.xml,
                            **/log4j2.properties,
                            **/application.yaml
                            **/persistence.xml
                        </packagingExcludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <!-- configure the plugin here -->
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>get-debian-version</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <exportAntProperties>true</exportAntProperties>
                                <target>
                                    <condition property="snapshotPkg">
                                        <contains string="${project.version}" substring="SNAPSHOT" />
                                    </condition>
                                    <condition property="debian.package.version" value="${project.version}-${maven.build.timestamp}" else="${project.version}">
                                        <isset property="snapshotPkg" />
                                    </condition>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin}</version>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <attach>false</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <id>include-dependencies-package</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin}</version>
                    <configuration>
                        <doctitle>Cornerstone Webservice ${project.version} API Documentation</doctitle>
                        <windowtitle>Cornerstone Webservice ${project.version} API</windowtitle>
                        <excludePackageNames>
                            *.internal.*:*.tests.*
                        </excludePackageNames>
                        <verbose />
                        <doclint>none</doclint>
                        <maxmemory>256m</maxmemory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>javadocs</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven.checkstyle.plugin}</version>
                    <configuration>
                        <configLocation>etc/config/checkstyle.xml</configLocation>
                        <suppressionsLocation>etc/config/checkstyle-suppressions.xml</suppressionsLocation>
                        <outputFile>${project.build.directory}/checkstyle/checkstyle-result.xml</outputFile>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>com.sun</groupId>
                                    <artifactId>tools</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin}</version>
                    <configuration>
                        <!-- print full stack trace if error -->
                        <trimStackTrace>false</trimStackTrace>
                        <!-- for convenience reasons, 'argLine' should not be overridden in child poms. if needed, a property should be declared and used here -->
                        <argLine>
                            -Xmx1024m -Dfile.encoding=UTF8 ${surefire.security.argline} ${surefire.coverage.argline}
                        </argLine>
                        <skipTests>${skip.tests}</skipTests>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-logger-api</artifactId>
                            <version>${maven.surefire.plugin}</version>
                            <!-- to get around bug https://github.com/junit-team/junit5/issues/1367 -->
                            <optional>true</optional>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-api</artifactId>
                            <version>${maven.surefire.plugin}</version>
                            <optional>true</optional>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin}</version>
                    <configuration>
                        <generateProjectInfo>false</generateProjectInfo>
                        <generateReports>true</generateReports>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${buildnumber.maven.plugin}</version>
                    <configuration>
                        <revisionOnScmFailure />
                        <format>{0,date,yyyyMMdd.HHmmss}</format>
                        <items>
                            <item>timestamp</item>
                        </items>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.maven.plugin}</version>
                    <dependencies>
                        <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                        <dependency>
                            <groupId>com.github.spotbugs</groupId>
                            <artifactId>spotbugs</artifactId>
                            <version>${spotbugs.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <skip>${spotbugs.skip}</skip>
                        <threshold>LOW</threshold>
                        <xmlOutput>true</xmlOutput>
                        <xmlOutputDirectory>target/site</xmlOutputDirectory>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>buildnumber-maven-plugin</artifactId> </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <dependencyManagement>
        <dependencies>
            <!-- Following dependencies are tied to version of Tomcat -->
            <!-- https://tomcat.apache.org/whichversion.html -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jjakarta.servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- jakarta.el-api and javax.el are needed by hibernate-validator. -->
            <!-- In a Java EE container, an EL implementation is already provided by the container. -->
            <!-- In a Java SE environment, however, you have to add an implementation as compile dependency to your POM file. -->
            <dependency>
                <groupId>jakarta.el</groupId>
                <artifactId>jakarta.el-api</artifactId>
                <version>${jakarta.el-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.websocket</groupId>
                <artifactId>jakarta.websocket-api</artifactId>
                <version>${jakarta.websocket-api.version}</version>
                <scope>compile</scope>
            </dependency>


            <!-- Following dependencies are tied to Jersey 2.x project, keep the version matched to Jersey project -->
            <dependency>
                <groupId>org.glassfish.jersey.containers</groupId>
                <artifactId>jersey-container-servlet</artifactId>
                <version>${jersey.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.ext</groupId>
                <artifactId>jersey-bean-validation</artifactId>
                <version>${jersey.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.hibernate.validator</groupId>
                        <artifactId>hibernate-validator</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-moxy</artifactId>
                <version>${jersey.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${moxy.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-api</artifactId>
                <version>${jsonp.ri.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.json</artifactId>
                <version>${jsonp.ri.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson-dataformat-yaml.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${jakarta.validation-api.version}</version>
                <scope>compile</scope>
            </dependency>


            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.jpa</artifactId>
                <version>${eclipselink.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.mindrot</groupId>
                <artifactId>jbcrypt</artifactId>
                <version>${jbcrypt.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-core</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jvm</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jmx</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jersey2</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-json</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-healthchecks</artifactId>
                <version>${io.dropwizard.metrics.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.test-framework.providers</groupId>
                <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
                <version>${jersey.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

</project>